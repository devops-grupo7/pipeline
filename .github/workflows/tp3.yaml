name: Three Points Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  hola-mundo:
    runs-on: ubuntu-latest
    steps:
      - name: my-step
        run: echo "Hello World!" 
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: npm
      - name: Cache node modules
15        uses: actions/cache@v2
16        env:
17          cache-name: cache-node-modules
18        with:
19          # npm cache files are stored in `~/.npm` on Linux/macOS
20          path: ~/.npm
21          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
22          restore-keys: |
23            ${{ runner.os }}-build-${{ env.cache-name }}-
24            ${{ runner.os }}-build-
25            ${{ runner.os }}-
26
27      # Install required deps for action
28      - name: Install Dependencies
29        run: npm install
30
31      # Finally, run our tests
32      - name: Run the tests
33        run: npm test
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Run Jest
  #     uses: stefanoeb/jest-action@1.0.3
  # prettier:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.head_ref }}
  #     - name: Prettify code
  #       uses: creyD/prettier_action@v4.2
  #       with:
  #         prettier_options: --write **/*.{js,md}
  # lint:
  #   runs-on: ubuntu-latest
  #   steps: 
  #   - name: Checkout
  #     uses: actions/checkout@master
  #   - name: lint
  #     uses: ghe-actions/dockerfile-validator@v1
  #     with:
  #       dockerfile: 'Dockerfile'
  #       lint: 'hadolint'
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v1
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Build and Push
  #     uses: docker/build-push-action@v2
  #     with:
  #       push: true
  #       tags: crisroddev/three-points:pipeline
