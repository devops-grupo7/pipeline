name: Three Points Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Start:
    runs-on: ubuntu-latest
    steps:
      - name: Start Pipeline
        run: echo "Pipeline Despliegue Preprod y Prod Grupo 7" 
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: npm
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      # - name: Run the tests
      #   run: npm test
  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Prettify code
        uses: creyD/prettier_action@v4.2
        with:
          prettier_options: --write **/*.{js,md}
  lint:
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout
      uses: actions/checkout@master
    - name: lint
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'Dockerfile'
        lint: 'hadolint'
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: crisroddev/three-points:pipeline
  
  PreProd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_APP_SECRET }}
          heroku_app_name: ${{ secrets.HEROKU_PREPROD_APP }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
  Prod:
    runs-on: ubuntu-latest
    needs: PreProd
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_APP_SECRET }}
          heroku_app_name: ${{ secrets.HEROKU_PROD_APP }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}